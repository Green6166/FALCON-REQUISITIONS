<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBmRXhpZgAATU0AKgAAAAgABgESAAMAAAABAAEAAAMBAAUAAAAB
        AAAAVgMDAAEAAAABAAAAAFEQAAEAAAABAQAAAFERAAQAAAABAAAOxFESAAQAAAABAAAOxAAAAAAAAYag
        AACxj//bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwM
        DAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAC0AZAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgj
        QrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2
        d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj
        5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIE
        BAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYn
        KCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqi
        o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEA
        AhEDEQA/AP5/6KK+pP8Agkj/AME57n/gpD+1DH4bvLq60rwX4dt/7V8Tahbj98tsHCJbwkgqJ5nIVS2Q
        qiWTa/l7G8vOs4wmVYGrmOOly0qacpPyXZdW9klq20kdGFw1TEVY0KKvKTskc/8A8E9/2MNL/bE+IN7Z
        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
        Af/Z
</value>
  </data>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBmRXhpZgAATU0AKgAAAAgABgESAAMAAAABAAEAAAMBAAUAAAAB
        AAAAVgMDAAEAAAABAAAAAFEQAAEAAAABAQAAAFERAAQAAAABAAAOxFESAAQAAAABAAAOxAAAAAAAAYag
        AACxj//bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwM
        DAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAC0AZAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgj
        QrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2
        d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj
        5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIE
        BAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYn
        KCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqi
        o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEA
        AhEDEQA/AP5/6KK+pP8Agkj/AME57n/gpD+1DH4bvLq60rwX4dt/7V8Tahbj98tsHCJbwkgqJ5nIVS2Q
        qiWTa/l7G8vOs4wmVYGrmOOly0qacpPyXZdW9klq20kdGFw1TEVY0KKvKTskc/8A8E9/2MNL/bE+IN7Z
        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
        Af/Z
</value>
  </data>
</root>